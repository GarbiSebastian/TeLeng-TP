Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> reglas main masreglas
Rule 2     reglas -> <empty>
Rule 3     masreglas -> <empty>
Rule 4     reglas -> reglas unaregla
Rule 5     masreglas -> masreglas unaregla
Rule 6     masreglas -> masreglas main
Rule 7     unaregla -> REGLA = elemento
Rule 8     main -> $ = elemento
Rule 9     unaregla -> REGLA . = elemento
Rule 10    main -> $ . = elemento
Rule 11    elemento -> elemento | elementoand
Rule 12    elemento -> elementoand
Rule 13    elementoand -> elementoand & elementobase
Rule 14    elementoand -> elementobase
Rule 15    elementobase -> prim
Rule 16    elementobase -> elementobase : trans
Rule 17    elementobase -> [ elemento ]
Rule 18    elementobase -> elementobase ^ numero
Rule 19    elementobase -> < elemento >
Rule 20    elementobase -> REGLA
Rule 21    elementobase -> $
Rule 22    prim -> BALL
Rule 23    prim -> BOX
Rule 24    prim -> NADA
Rule 25    trans -> RX numero
Rule 26    trans -> RY numero
Rule 27    trans -> RZ numero
Rule 28    trans -> S numero
Rule 29    trans -> SX numero
Rule 30    trans -> SY numero
Rule 31    trans -> SZ numero
Rule 32    trans -> TX numero
Rule 33    trans -> TY numero
Rule 34    trans -> TZ numero
Rule 35    trans -> CR numero
Rule 36    trans -> CG numero
Rule 37    trans -> CB numero
Rule 38    trans -> D numero
Rule 39    numero -> numero + factor
Rule 40    numero -> numero - factor
Rule 41    factor -> factor * termino
Rule 42    factor -> factor / termino
Rule 43    numero -> factor
Rule 44    factor -> termino
Rule 45    termino -> NUM
Rule 46    termino -> + NUM
Rule 47    termino -> - NUM
Rule 48    termino -> ( numero )
Rule 49    termino -> + ( numero )
Rule 50    termino -> - ( numero )

Terminals, with rules where they appear

$                    : 8 10 21
&                    : 13
(                    : 48 49 50
)                    : 48 49 50
*                    : 41
+                    : 39 46 49
-                    : 40 47 50
.                    : 9 10
/                    : 42
:                    : 16
<                    : 19
=                    : 7 8 9 10
>                    : 19
BALL                 : 22
BOX                  : 23
CB                   : 37
CG                   : 36
CR                   : 35
D                    : 38
NADA                 : 24
NUM                  : 45 46 47
REGLA                : 7 9 20
RX                   : 25
RY                   : 26
RZ                   : 27
S                    : 28
SX                   : 29
SY                   : 30
SZ                   : 31
TX                   : 32
TY                   : 33
TZ                   : 34
[                    : 17
]                    : 17
^                    : 18
error                : 
|                    : 11

Nonterminals, with rules where they appear

elemento             : 7 8 9 10 11 17 19
elementoand          : 11 12 13
elementobase         : 13 14 16 18
factor               : 39 40 41 42 43
main                 : 1 6
masreglas            : 1 5 6
numero               : 18 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 48 49 50
prim                 : 15
programa             : 0
reglas               : 1 4
termino              : 41 42 44
trans                : 16
unaregla             : 4 5

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . reglas main masreglas
    (2) reglas -> .
    (4) reglas -> . reglas unaregla

    $               reduce using rule 2 (reglas -> .)
    REGLA           reduce using rule 2 (reglas -> .)

    reglas                         shift and go to state 1
    programa                       shift and go to state 2

state 1

    (1) programa -> reglas . main masreglas
    (4) reglas -> reglas . unaregla
    (8) main -> . $ = elemento
    (10) main -> . $ . = elemento
    (7) unaregla -> . REGLA = elemento
    (9) unaregla -> . REGLA . = elemento

    $               shift and go to state 4
    REGLA           shift and go to state 5

    unaregla                       shift and go to state 3
    main                           shift and go to state 6

state 2

    (0) S' -> programa .



state 3

    (4) reglas -> reglas unaregla .

    $               reduce using rule 4 (reglas -> reglas unaregla .)
    REGLA           reduce using rule 4 (reglas -> reglas unaregla .)


state 4

    (8) main -> $ . = elemento
    (10) main -> $ . . = elemento

    =               shift and go to state 8
    .               shift and go to state 7


state 5

    (7) unaregla -> REGLA . = elemento
    (9) unaregla -> REGLA . . = elemento

    =               shift and go to state 10
    .               shift and go to state 9


state 6

    (1) programa -> reglas main . masreglas
    (3) masreglas -> .
    (5) masreglas -> . masreglas unaregla
    (6) masreglas -> . masreglas main

    REGLA           reduce using rule 3 (masreglas -> .)
    $               reduce using rule 3 (masreglas -> .)
    $end            reduce using rule 3 (masreglas -> .)

    masreglas                      shift and go to state 11

state 7

    (10) main -> $ . . = elemento

    =               shift and go to state 12


state 8

    (8) main -> $ = . elemento
    (11) elemento -> . elemento | elementoand
    (12) elemento -> . elementoand
    (13) elementoand -> . elementoand & elementobase
    (14) elementoand -> . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 14
    elementoand                    shift and go to state 17
    prim                           shift and go to state 21
    elemento                       shift and go to state 23

state 9

    (9) unaregla -> REGLA . . = elemento

    =               shift and go to state 24


state 10

    (7) unaregla -> REGLA = . elemento
    (11) elemento -> . elemento | elementoand
    (12) elemento -> . elementoand
    (13) elementoand -> . elementoand & elementobase
    (14) elementoand -> . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 14
    elementoand                    shift and go to state 17
    prim                           shift and go to state 21
    elemento                       shift and go to state 25

state 11

    (1) programa -> reglas main masreglas .
    (5) masreglas -> masreglas . unaregla
    (6) masreglas -> masreglas . main
    (7) unaregla -> . REGLA = elemento
    (9) unaregla -> . REGLA . = elemento
    (8) main -> . $ = elemento
    (10) main -> . $ . = elemento

    $end            reduce using rule 1 (programa -> reglas main masreglas .)
    REGLA           shift and go to state 5
    $               shift and go to state 4

    unaregla                       shift and go to state 26
    main                           shift and go to state 27

state 12

    (10) main -> $ . = . elemento
    (11) elemento -> . elemento | elementoand
    (12) elemento -> . elementoand
    (13) elementoand -> . elementoand & elementobase
    (14) elementoand -> . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 14
    elementoand                    shift and go to state 17
    prim                           shift and go to state 21
    elemento                       shift and go to state 28

state 13

    (23) prim -> BOX .

    :               reduce using rule 23 (prim -> BOX .)
    ^               reduce using rule 23 (prim -> BOX .)
    &               reduce using rule 23 (prim -> BOX .)
    >               reduce using rule 23 (prim -> BOX .)
    |               reduce using rule 23 (prim -> BOX .)
    $               reduce using rule 23 (prim -> BOX .)
    REGLA           reduce using rule 23 (prim -> BOX .)
    $end            reduce using rule 23 (prim -> BOX .)
    ]               reduce using rule 23 (prim -> BOX .)


state 14

    (14) elementoand -> elementobase .
    (16) elementobase -> elementobase . : trans
    (18) elementobase -> elementobase . ^ numero

    &               reduce using rule 14 (elementoand -> elementobase .)
    |               reduce using rule 14 (elementoand -> elementobase .)
    $               reduce using rule 14 (elementoand -> elementobase .)
    REGLA           reduce using rule 14 (elementoand -> elementobase .)
    $end            reduce using rule 14 (elementoand -> elementobase .)
    ]               reduce using rule 14 (elementoand -> elementobase .)
    >               reduce using rule 14 (elementoand -> elementobase .)
    :               shift and go to state 29
    ^               shift and go to state 30


state 15

    (21) elementobase -> $ .

    :               reduce using rule 21 (elementobase -> $ .)
    ^               reduce using rule 21 (elementobase -> $ .)
    &               reduce using rule 21 (elementobase -> $ .)
    ]               reduce using rule 21 (elementobase -> $ .)
    |               reduce using rule 21 (elementobase -> $ .)
    REGLA           reduce using rule 21 (elementobase -> $ .)
    $               reduce using rule 21 (elementobase -> $ .)
    $end            reduce using rule 21 (elementobase -> $ .)
    >               reduce using rule 21 (elementobase -> $ .)


state 16

    (20) elementobase -> REGLA .

    :               reduce using rule 20 (elementobase -> REGLA .)
    ^               reduce using rule 20 (elementobase -> REGLA .)
    &               reduce using rule 20 (elementobase -> REGLA .)
    ]               reduce using rule 20 (elementobase -> REGLA .)
    |               reduce using rule 20 (elementobase -> REGLA .)
    REGLA           reduce using rule 20 (elementobase -> REGLA .)
    $               reduce using rule 20 (elementobase -> REGLA .)
    $end            reduce using rule 20 (elementobase -> REGLA .)
    >               reduce using rule 20 (elementobase -> REGLA .)


state 17

    (12) elemento -> elementoand .
    (13) elementoand -> elementoand . & elementobase

    >               reduce using rule 12 (elemento -> elementoand .)
    |               reduce using rule 12 (elemento -> elementoand .)
    REGLA           reduce using rule 12 (elemento -> elementoand .)
    $               reduce using rule 12 (elemento -> elementoand .)
    $end            reduce using rule 12 (elemento -> elementoand .)
    ]               reduce using rule 12 (elemento -> elementoand .)
    &               shift and go to state 31


state 18

    (24) prim -> NADA .

    :               reduce using rule 24 (prim -> NADA .)
    ^               reduce using rule 24 (prim -> NADA .)
    &               reduce using rule 24 (prim -> NADA .)
    >               reduce using rule 24 (prim -> NADA .)
    |               reduce using rule 24 (prim -> NADA .)
    $               reduce using rule 24 (prim -> NADA .)
    REGLA           reduce using rule 24 (prim -> NADA .)
    $end            reduce using rule 24 (prim -> NADA .)
    ]               reduce using rule 24 (prim -> NADA .)


state 19

    (19) elementobase -> < . elemento >
    (11) elemento -> . elemento | elementoand
    (12) elemento -> . elementoand
    (13) elementoand -> . elementoand & elementobase
    (14) elementoand -> . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 14
    elementoand                    shift and go to state 17
    prim                           shift and go to state 21
    elemento                       shift and go to state 32

state 20

    (22) prim -> BALL .

    :               reduce using rule 22 (prim -> BALL .)
    ^               reduce using rule 22 (prim -> BALL .)
    &               reduce using rule 22 (prim -> BALL .)
    >               reduce using rule 22 (prim -> BALL .)
    |               reduce using rule 22 (prim -> BALL .)
    $               reduce using rule 22 (prim -> BALL .)
    REGLA           reduce using rule 22 (prim -> BALL .)
    $end            reduce using rule 22 (prim -> BALL .)
    ]               reduce using rule 22 (prim -> BALL .)


state 21

    (15) elementobase -> prim .

    :               reduce using rule 15 (elementobase -> prim .)
    ^               reduce using rule 15 (elementobase -> prim .)
    &               reduce using rule 15 (elementobase -> prim .)
    ]               reduce using rule 15 (elementobase -> prim .)
    |               reduce using rule 15 (elementobase -> prim .)
    REGLA           reduce using rule 15 (elementobase -> prim .)
    $               reduce using rule 15 (elementobase -> prim .)
    $end            reduce using rule 15 (elementobase -> prim .)
    >               reduce using rule 15 (elementobase -> prim .)


state 22

    (17) elementobase -> [ . elemento ]
    (11) elemento -> . elemento | elementoand
    (12) elemento -> . elementoand
    (13) elementoand -> . elementoand & elementobase
    (14) elementoand -> . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 14
    elementoand                    shift and go to state 17
    prim                           shift and go to state 21
    elemento                       shift and go to state 33

state 23

    (8) main -> $ = elemento .
    (11) elemento -> elemento . | elementoand

    REGLA           reduce using rule 8 (main -> $ = elemento .)
    $               reduce using rule 8 (main -> $ = elemento .)
    $end            reduce using rule 8 (main -> $ = elemento .)
    |               shift and go to state 34


state 24

    (9) unaregla -> REGLA . = . elemento
    (11) elemento -> . elemento | elementoand
    (12) elemento -> . elementoand
    (13) elementoand -> . elementoand & elementobase
    (14) elementoand -> . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 14
    elementoand                    shift and go to state 17
    prim                           shift and go to state 21
    elemento                       shift and go to state 35

state 25

    (7) unaregla -> REGLA = elemento .
    (11) elemento -> elemento . | elementoand

    REGLA           reduce using rule 7 (unaregla -> REGLA = elemento .)
    $               reduce using rule 7 (unaregla -> REGLA = elemento .)
    $end            reduce using rule 7 (unaregla -> REGLA = elemento .)
    |               shift and go to state 34


state 26

    (5) masreglas -> masreglas unaregla .

    REGLA           reduce using rule 5 (masreglas -> masreglas unaregla .)
    $               reduce using rule 5 (masreglas -> masreglas unaregla .)
    $end            reduce using rule 5 (masreglas -> masreglas unaregla .)


state 27

    (6) masreglas -> masreglas main .

    REGLA           reduce using rule 6 (masreglas -> masreglas main .)
    $               reduce using rule 6 (masreglas -> masreglas main .)
    $end            reduce using rule 6 (masreglas -> masreglas main .)


state 28

    (10) main -> $ . = elemento .
    (11) elemento -> elemento . | elementoand

    REGLA           reduce using rule 10 (main -> $ . = elemento .)
    $               reduce using rule 10 (main -> $ . = elemento .)
    $end            reduce using rule 10 (main -> $ . = elemento .)
    |               shift and go to state 34


state 29

    (16) elementobase -> elementobase : . trans
    (25) trans -> . RX numero
    (26) trans -> . RY numero
    (27) trans -> . RZ numero
    (28) trans -> . S numero
    (29) trans -> . SX numero
    (30) trans -> . SY numero
    (31) trans -> . SZ numero
    (32) trans -> . TX numero
    (33) trans -> . TY numero
    (34) trans -> . TZ numero
    (35) trans -> . CR numero
    (36) trans -> . CG numero
    (37) trans -> . CB numero
    (38) trans -> . D numero

    RX              shift and go to state 42
    RY              shift and go to state 43
    RZ              shift and go to state 46
    S               shift and go to state 44
    SX              shift and go to state 45
    SY              shift and go to state 37
    SZ              shift and go to state 36
    TX              shift and go to state 39
    TY              shift and go to state 40
    TZ              shift and go to state 48
    CR              shift and go to state 47
    CG              shift and go to state 41
    CB              shift and go to state 50
    D               shift and go to state 38

    trans                          shift and go to state 49

state 30

    (18) elementobase -> elementobase ^ . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 54
    factor                         shift and go to state 57

state 31

    (13) elementoand -> elementoand & . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 58
    prim                           shift and go to state 21

state 32

    (19) elementobase -> < elemento . >
    (11) elemento -> elemento . | elementoand

    >               shift and go to state 59
    |               shift and go to state 34


state 33

    (17) elementobase -> [ elemento . ]
    (11) elemento -> elemento . | elementoand

    ]               shift and go to state 60
    |               shift and go to state 34


state 34

    (11) elemento -> elemento | . elementoand
    (13) elementoand -> . elementoand & elementobase
    (14) elementoand -> . elementobase
    (15) elementobase -> . prim
    (16) elementobase -> . elementobase : trans
    (17) elementobase -> . [ elemento ]
    (18) elementobase -> . elementobase ^ numero
    (19) elementobase -> . < elemento >
    (20) elementobase -> . REGLA
    (21) elementobase -> . $
    (22) prim -> . BALL
    (23) prim -> . BOX
    (24) prim -> . NADA

    [               shift and go to state 22
    <               shift and go to state 19
    REGLA           shift and go to state 16
    $               shift and go to state 15
    BALL            shift and go to state 20
    BOX             shift and go to state 13
    NADA            shift and go to state 18

    elementobase                   shift and go to state 14
    elementoand                    shift and go to state 61
    prim                           shift and go to state 21

state 35

    (9) unaregla -> REGLA . = elemento .
    (11) elemento -> elemento . | elementoand

    REGLA           reduce using rule 9 (unaregla -> REGLA . = elemento .)
    $               reduce using rule 9 (unaregla -> REGLA . = elemento .)
    $end            reduce using rule 9 (unaregla -> REGLA . = elemento .)
    |               shift and go to state 34


state 36

    (31) trans -> SZ . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 62
    factor                         shift and go to state 57

state 37

    (30) trans -> SY . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 63
    factor                         shift and go to state 57

state 38

    (38) trans -> D . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 64
    factor                         shift and go to state 57

state 39

    (32) trans -> TX . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 65
    factor                         shift and go to state 57

state 40

    (33) trans -> TY . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 66
    factor                         shift and go to state 57

state 41

    (36) trans -> CG . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 67
    factor                         shift and go to state 57

state 42

    (25) trans -> RX . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 68
    factor                         shift and go to state 57

state 43

    (26) trans -> RY . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 69
    factor                         shift and go to state 57

state 44

    (28) trans -> S . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 70
    factor                         shift and go to state 57

state 45

    (29) trans -> SX . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 71
    factor                         shift and go to state 57

state 46

    (27) trans -> RZ . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 72
    factor                         shift and go to state 57

state 47

    (35) trans -> CR . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 73
    factor                         shift and go to state 57

state 48

    (34) trans -> TZ . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 74
    factor                         shift and go to state 57

state 49

    (16) elementobase -> elementobase : trans .

    :               reduce using rule 16 (elementobase -> elementobase : trans .)
    ^               reduce using rule 16 (elementobase -> elementobase : trans .)
    &               reduce using rule 16 (elementobase -> elementobase : trans .)
    ]               reduce using rule 16 (elementobase -> elementobase : trans .)
    |               reduce using rule 16 (elementobase -> elementobase : trans .)
    REGLA           reduce using rule 16 (elementobase -> elementobase : trans .)
    $               reduce using rule 16 (elementobase -> elementobase : trans .)
    $end            reduce using rule 16 (elementobase -> elementobase : trans .)
    >               reduce using rule 16 (elementobase -> elementobase : trans .)


state 50

    (37) trans -> CB . numero
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 75
    factor                         shift and go to state 57

state 51

    (48) termino -> ( . numero )
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 76
    factor                         shift and go to state 57

state 52

    (46) termino -> + . NUM
    (49) termino -> + . ( numero )

    NUM             shift and go to state 78
    (               shift and go to state 77


state 53

    (47) termino -> - . NUM
    (50) termino -> - . ( numero )

    NUM             shift and go to state 80
    (               shift and go to state 79


state 54

    (18) elementobase -> elementobase ^ numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 18 (elementobase -> elementobase ^ numero .)
    ^               reduce using rule 18 (elementobase -> elementobase ^ numero .)
    &               reduce using rule 18 (elementobase -> elementobase ^ numero .)
    ]               reduce using rule 18 (elementobase -> elementobase ^ numero .)
    |               reduce using rule 18 (elementobase -> elementobase ^ numero .)
    REGLA           reduce using rule 18 (elementobase -> elementobase ^ numero .)
    $               reduce using rule 18 (elementobase -> elementobase ^ numero .)
    $end            reduce using rule 18 (elementobase -> elementobase ^ numero .)
    >               reduce using rule 18 (elementobase -> elementobase ^ numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 55

    (45) termino -> NUM .

    *               reduce using rule 45 (termino -> NUM .)
    /               reduce using rule 45 (termino -> NUM .)
    +               reduce using rule 45 (termino -> NUM .)
    -               reduce using rule 45 (termino -> NUM .)
    :               reduce using rule 45 (termino -> NUM .)
    ^               reduce using rule 45 (termino -> NUM .)
    &               reduce using rule 45 (termino -> NUM .)
    |               reduce using rule 45 (termino -> NUM .)
    REGLA           reduce using rule 45 (termino -> NUM .)
    $               reduce using rule 45 (termino -> NUM .)
    $end            reduce using rule 45 (termino -> NUM .)
    >               reduce using rule 45 (termino -> NUM .)
    ]               reduce using rule 45 (termino -> NUM .)
    )               reduce using rule 45 (termino -> NUM .)


state 56

    (44) factor -> termino .

    *               reduce using rule 44 (factor -> termino .)
    /               reduce using rule 44 (factor -> termino .)
    +               reduce using rule 44 (factor -> termino .)
    -               reduce using rule 44 (factor -> termino .)
    :               reduce using rule 44 (factor -> termino .)
    ^               reduce using rule 44 (factor -> termino .)
    &               reduce using rule 44 (factor -> termino .)
    |               reduce using rule 44 (factor -> termino .)
    REGLA           reduce using rule 44 (factor -> termino .)
    $               reduce using rule 44 (factor -> termino .)
    $end            reduce using rule 44 (factor -> termino .)
    >               reduce using rule 44 (factor -> termino .)
    ]               reduce using rule 44 (factor -> termino .)
    )               reduce using rule 44 (factor -> termino .)


state 57

    (43) numero -> factor .
    (41) factor -> factor . * termino
    (42) factor -> factor . / termino

    +               reduce using rule 43 (numero -> factor .)
    -               reduce using rule 43 (numero -> factor .)
    :               reduce using rule 43 (numero -> factor .)
    ^               reduce using rule 43 (numero -> factor .)
    &               reduce using rule 43 (numero -> factor .)
    |               reduce using rule 43 (numero -> factor .)
    REGLA           reduce using rule 43 (numero -> factor .)
    $               reduce using rule 43 (numero -> factor .)
    $end            reduce using rule 43 (numero -> factor .)
    >               reduce using rule 43 (numero -> factor .)
    ]               reduce using rule 43 (numero -> factor .)
    )               reduce using rule 43 (numero -> factor .)
    *               shift and go to state 83
    /               shift and go to state 84


state 58

    (13) elementoand -> elementoand & elementobase .
    (16) elementobase -> elementobase . : trans
    (18) elementobase -> elementobase . ^ numero

    &               reduce using rule 13 (elementoand -> elementoand & elementobase .)
    |               reduce using rule 13 (elementoand -> elementoand & elementobase .)
    $               reduce using rule 13 (elementoand -> elementoand & elementobase .)
    REGLA           reduce using rule 13 (elementoand -> elementoand & elementobase .)
    $end            reduce using rule 13 (elementoand -> elementoand & elementobase .)
    ]               reduce using rule 13 (elementoand -> elementoand & elementobase .)
    >               reduce using rule 13 (elementoand -> elementoand & elementobase .)
    :               shift and go to state 29
    ^               shift and go to state 30


state 59

    (19) elementobase -> < elemento > .

    :               reduce using rule 19 (elementobase -> < elemento > .)
    ^               reduce using rule 19 (elementobase -> < elemento > .)
    &               reduce using rule 19 (elementobase -> < elemento > .)
    ]               reduce using rule 19 (elementobase -> < elemento > .)
    |               reduce using rule 19 (elementobase -> < elemento > .)
    REGLA           reduce using rule 19 (elementobase -> < elemento > .)
    $               reduce using rule 19 (elementobase -> < elemento > .)
    $end            reduce using rule 19 (elementobase -> < elemento > .)
    >               reduce using rule 19 (elementobase -> < elemento > .)


state 60

    (17) elementobase -> [ elemento ] .

    :               reduce using rule 17 (elementobase -> [ elemento ] .)
    ^               reduce using rule 17 (elementobase -> [ elemento ] .)
    &               reduce using rule 17 (elementobase -> [ elemento ] .)
    ]               reduce using rule 17 (elementobase -> [ elemento ] .)
    |               reduce using rule 17 (elementobase -> [ elemento ] .)
    REGLA           reduce using rule 17 (elementobase -> [ elemento ] .)
    $               reduce using rule 17 (elementobase -> [ elemento ] .)
    $end            reduce using rule 17 (elementobase -> [ elemento ] .)
    >               reduce using rule 17 (elementobase -> [ elemento ] .)


state 61

    (11) elemento -> elemento | elementoand .
    (13) elementoand -> elementoand . & elementobase

    >               reduce using rule 11 (elemento -> elemento | elementoand .)
    |               reduce using rule 11 (elemento -> elemento | elementoand .)
    REGLA           reduce using rule 11 (elemento -> elemento | elementoand .)
    $               reduce using rule 11 (elemento -> elemento | elementoand .)
    $end            reduce using rule 11 (elemento -> elemento | elementoand .)
    ]               reduce using rule 11 (elemento -> elemento | elementoand .)
    &               shift and go to state 31


state 62

    (31) trans -> SZ numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 31 (trans -> SZ numero .)
    ^               reduce using rule 31 (trans -> SZ numero .)
    &               reduce using rule 31 (trans -> SZ numero .)
    |               reduce using rule 31 (trans -> SZ numero .)
    REGLA           reduce using rule 31 (trans -> SZ numero .)
    $               reduce using rule 31 (trans -> SZ numero .)
    $end            reduce using rule 31 (trans -> SZ numero .)
    >               reduce using rule 31 (trans -> SZ numero .)
    ]               reduce using rule 31 (trans -> SZ numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 63

    (30) trans -> SY numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 30 (trans -> SY numero .)
    ^               reduce using rule 30 (trans -> SY numero .)
    &               reduce using rule 30 (trans -> SY numero .)
    |               reduce using rule 30 (trans -> SY numero .)
    REGLA           reduce using rule 30 (trans -> SY numero .)
    $               reduce using rule 30 (trans -> SY numero .)
    $end            reduce using rule 30 (trans -> SY numero .)
    >               reduce using rule 30 (trans -> SY numero .)
    ]               reduce using rule 30 (trans -> SY numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 64

    (38) trans -> D numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 38 (trans -> D numero .)
    ^               reduce using rule 38 (trans -> D numero .)
    &               reduce using rule 38 (trans -> D numero .)
    |               reduce using rule 38 (trans -> D numero .)
    REGLA           reduce using rule 38 (trans -> D numero .)
    $               reduce using rule 38 (trans -> D numero .)
    $end            reduce using rule 38 (trans -> D numero .)
    >               reduce using rule 38 (trans -> D numero .)
    ]               reduce using rule 38 (trans -> D numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 65

    (32) trans -> TX numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 32 (trans -> TX numero .)
    ^               reduce using rule 32 (trans -> TX numero .)
    &               reduce using rule 32 (trans -> TX numero .)
    |               reduce using rule 32 (trans -> TX numero .)
    REGLA           reduce using rule 32 (trans -> TX numero .)
    $               reduce using rule 32 (trans -> TX numero .)
    $end            reduce using rule 32 (trans -> TX numero .)
    >               reduce using rule 32 (trans -> TX numero .)
    ]               reduce using rule 32 (trans -> TX numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 66

    (33) trans -> TY numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 33 (trans -> TY numero .)
    ^               reduce using rule 33 (trans -> TY numero .)
    &               reduce using rule 33 (trans -> TY numero .)
    |               reduce using rule 33 (trans -> TY numero .)
    REGLA           reduce using rule 33 (trans -> TY numero .)
    $               reduce using rule 33 (trans -> TY numero .)
    $end            reduce using rule 33 (trans -> TY numero .)
    >               reduce using rule 33 (trans -> TY numero .)
    ]               reduce using rule 33 (trans -> TY numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 67

    (36) trans -> CG numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 36 (trans -> CG numero .)
    ^               reduce using rule 36 (trans -> CG numero .)
    &               reduce using rule 36 (trans -> CG numero .)
    |               reduce using rule 36 (trans -> CG numero .)
    REGLA           reduce using rule 36 (trans -> CG numero .)
    $               reduce using rule 36 (trans -> CG numero .)
    $end            reduce using rule 36 (trans -> CG numero .)
    >               reduce using rule 36 (trans -> CG numero .)
    ]               reduce using rule 36 (trans -> CG numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 68

    (25) trans -> RX numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 25 (trans -> RX numero .)
    ^               reduce using rule 25 (trans -> RX numero .)
    &               reduce using rule 25 (trans -> RX numero .)
    |               reduce using rule 25 (trans -> RX numero .)
    REGLA           reduce using rule 25 (trans -> RX numero .)
    $               reduce using rule 25 (trans -> RX numero .)
    $end            reduce using rule 25 (trans -> RX numero .)
    >               reduce using rule 25 (trans -> RX numero .)
    ]               reduce using rule 25 (trans -> RX numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 69

    (26) trans -> RY numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 26 (trans -> RY numero .)
    ^               reduce using rule 26 (trans -> RY numero .)
    &               reduce using rule 26 (trans -> RY numero .)
    |               reduce using rule 26 (trans -> RY numero .)
    REGLA           reduce using rule 26 (trans -> RY numero .)
    $               reduce using rule 26 (trans -> RY numero .)
    $end            reduce using rule 26 (trans -> RY numero .)
    >               reduce using rule 26 (trans -> RY numero .)
    ]               reduce using rule 26 (trans -> RY numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 70

    (28) trans -> S numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 28 (trans -> S numero .)
    ^               reduce using rule 28 (trans -> S numero .)
    &               reduce using rule 28 (trans -> S numero .)
    |               reduce using rule 28 (trans -> S numero .)
    REGLA           reduce using rule 28 (trans -> S numero .)
    $               reduce using rule 28 (trans -> S numero .)
    $end            reduce using rule 28 (trans -> S numero .)
    >               reduce using rule 28 (trans -> S numero .)
    ]               reduce using rule 28 (trans -> S numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 71

    (29) trans -> SX numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 29 (trans -> SX numero .)
    ^               reduce using rule 29 (trans -> SX numero .)
    &               reduce using rule 29 (trans -> SX numero .)
    |               reduce using rule 29 (trans -> SX numero .)
    REGLA           reduce using rule 29 (trans -> SX numero .)
    $               reduce using rule 29 (trans -> SX numero .)
    $end            reduce using rule 29 (trans -> SX numero .)
    >               reduce using rule 29 (trans -> SX numero .)
    ]               reduce using rule 29 (trans -> SX numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 72

    (27) trans -> RZ numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 27 (trans -> RZ numero .)
    ^               reduce using rule 27 (trans -> RZ numero .)
    &               reduce using rule 27 (trans -> RZ numero .)
    |               reduce using rule 27 (trans -> RZ numero .)
    REGLA           reduce using rule 27 (trans -> RZ numero .)
    $               reduce using rule 27 (trans -> RZ numero .)
    $end            reduce using rule 27 (trans -> RZ numero .)
    >               reduce using rule 27 (trans -> RZ numero .)
    ]               reduce using rule 27 (trans -> RZ numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 73

    (35) trans -> CR numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 35 (trans -> CR numero .)
    ^               reduce using rule 35 (trans -> CR numero .)
    &               reduce using rule 35 (trans -> CR numero .)
    |               reduce using rule 35 (trans -> CR numero .)
    REGLA           reduce using rule 35 (trans -> CR numero .)
    $               reduce using rule 35 (trans -> CR numero .)
    $end            reduce using rule 35 (trans -> CR numero .)
    >               reduce using rule 35 (trans -> CR numero .)
    ]               reduce using rule 35 (trans -> CR numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 74

    (34) trans -> TZ numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 34 (trans -> TZ numero .)
    ^               reduce using rule 34 (trans -> TZ numero .)
    &               reduce using rule 34 (trans -> TZ numero .)
    |               reduce using rule 34 (trans -> TZ numero .)
    REGLA           reduce using rule 34 (trans -> TZ numero .)
    $               reduce using rule 34 (trans -> TZ numero .)
    $end            reduce using rule 34 (trans -> TZ numero .)
    >               reduce using rule 34 (trans -> TZ numero .)
    ]               reduce using rule 34 (trans -> TZ numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 75

    (37) trans -> CB numero .
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    :               reduce using rule 37 (trans -> CB numero .)
    ^               reduce using rule 37 (trans -> CB numero .)
    &               reduce using rule 37 (trans -> CB numero .)
    |               reduce using rule 37 (trans -> CB numero .)
    REGLA           reduce using rule 37 (trans -> CB numero .)
    $               reduce using rule 37 (trans -> CB numero .)
    $end            reduce using rule 37 (trans -> CB numero .)
    >               reduce using rule 37 (trans -> CB numero .)
    ]               reduce using rule 37 (trans -> CB numero .)
    +               shift and go to state 81
    -               shift and go to state 82


state 76

    (48) termino -> ( numero . )
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    )               shift and go to state 85
    +               shift and go to state 81
    -               shift and go to state 82


state 77

    (49) termino -> + ( . numero )
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 86
    factor                         shift and go to state 57

state 78

    (46) termino -> + NUM .

    *               reduce using rule 46 (termino -> + NUM .)
    /               reduce using rule 46 (termino -> + NUM .)
    +               reduce using rule 46 (termino -> + NUM .)
    -               reduce using rule 46 (termino -> + NUM .)
    :               reduce using rule 46 (termino -> + NUM .)
    ^               reduce using rule 46 (termino -> + NUM .)
    &               reduce using rule 46 (termino -> + NUM .)
    |               reduce using rule 46 (termino -> + NUM .)
    REGLA           reduce using rule 46 (termino -> + NUM .)
    $               reduce using rule 46 (termino -> + NUM .)
    $end            reduce using rule 46 (termino -> + NUM .)
    >               reduce using rule 46 (termino -> + NUM .)
    ]               reduce using rule 46 (termino -> + NUM .)
    )               reduce using rule 46 (termino -> + NUM .)


state 79

    (50) termino -> - ( . numero )
    (39) numero -> . numero + factor
    (40) numero -> . numero - factor
    (43) numero -> . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    numero                         shift and go to state 87
    factor                         shift and go to state 57

state 80

    (47) termino -> - NUM .

    *               reduce using rule 47 (termino -> - NUM .)
    /               reduce using rule 47 (termino -> - NUM .)
    +               reduce using rule 47 (termino -> - NUM .)
    -               reduce using rule 47 (termino -> - NUM .)
    :               reduce using rule 47 (termino -> - NUM .)
    ^               reduce using rule 47 (termino -> - NUM .)
    &               reduce using rule 47 (termino -> - NUM .)
    |               reduce using rule 47 (termino -> - NUM .)
    REGLA           reduce using rule 47 (termino -> - NUM .)
    $               reduce using rule 47 (termino -> - NUM .)
    $end            reduce using rule 47 (termino -> - NUM .)
    >               reduce using rule 47 (termino -> - NUM .)
    ]               reduce using rule 47 (termino -> - NUM .)
    )               reduce using rule 47 (termino -> - NUM .)


state 81

    (39) numero -> numero + . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    factor                         shift and go to state 88

state 82

    (40) numero -> numero - . factor
    (41) factor -> . factor * termino
    (42) factor -> . factor / termino
    (44) factor -> . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 56
    factor                         shift and go to state 89

state 83

    (41) factor -> factor * . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 90

state 84

    (42) factor -> factor / . termino
    (45) termino -> . NUM
    (46) termino -> . + NUM
    (47) termino -> . - NUM
    (48) termino -> . ( numero )
    (49) termino -> . + ( numero )
    (50) termino -> . - ( numero )

    NUM             shift and go to state 55
    +               shift and go to state 52
    -               shift and go to state 53
    (               shift and go to state 51

    termino                        shift and go to state 91

state 85

    (48) termino -> ( numero ) .

    *               reduce using rule 48 (termino -> ( numero ) .)
    /               reduce using rule 48 (termino -> ( numero ) .)
    +               reduce using rule 48 (termino -> ( numero ) .)
    -               reduce using rule 48 (termino -> ( numero ) .)
    :               reduce using rule 48 (termino -> ( numero ) .)
    ^               reduce using rule 48 (termino -> ( numero ) .)
    &               reduce using rule 48 (termino -> ( numero ) .)
    |               reduce using rule 48 (termino -> ( numero ) .)
    REGLA           reduce using rule 48 (termino -> ( numero ) .)
    $               reduce using rule 48 (termino -> ( numero ) .)
    $end            reduce using rule 48 (termino -> ( numero ) .)
    >               reduce using rule 48 (termino -> ( numero ) .)
    ]               reduce using rule 48 (termino -> ( numero ) .)
    )               reduce using rule 48 (termino -> ( numero ) .)


state 86

    (49) termino -> + ( numero . )
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    )               shift and go to state 92
    +               shift and go to state 81
    -               shift and go to state 82


state 87

    (50) termino -> - ( numero . )
    (39) numero -> numero . + factor
    (40) numero -> numero . - factor

    )               shift and go to state 93
    +               shift and go to state 81
    -               shift and go to state 82


state 88

    (39) numero -> numero + factor .
    (41) factor -> factor . * termino
    (42) factor -> factor . / termino

    +               reduce using rule 39 (numero -> numero + factor .)
    -               reduce using rule 39 (numero -> numero + factor .)
    :               reduce using rule 39 (numero -> numero + factor .)
    ^               reduce using rule 39 (numero -> numero + factor .)
    &               reduce using rule 39 (numero -> numero + factor .)
    |               reduce using rule 39 (numero -> numero + factor .)
    REGLA           reduce using rule 39 (numero -> numero + factor .)
    $               reduce using rule 39 (numero -> numero + factor .)
    $end            reduce using rule 39 (numero -> numero + factor .)
    >               reduce using rule 39 (numero -> numero + factor .)
    ]               reduce using rule 39 (numero -> numero + factor .)
    )               reduce using rule 39 (numero -> numero + factor .)
    *               shift and go to state 83
    /               shift and go to state 84


state 89

    (40) numero -> numero - factor .
    (41) factor -> factor . * termino
    (42) factor -> factor . / termino

    +               reduce using rule 40 (numero -> numero - factor .)
    -               reduce using rule 40 (numero -> numero - factor .)
    :               reduce using rule 40 (numero -> numero - factor .)
    ^               reduce using rule 40 (numero -> numero - factor .)
    &               reduce using rule 40 (numero -> numero - factor .)
    |               reduce using rule 40 (numero -> numero - factor .)
    REGLA           reduce using rule 40 (numero -> numero - factor .)
    $               reduce using rule 40 (numero -> numero - factor .)
    $end            reduce using rule 40 (numero -> numero - factor .)
    >               reduce using rule 40 (numero -> numero - factor .)
    ]               reduce using rule 40 (numero -> numero - factor .)
    )               reduce using rule 40 (numero -> numero - factor .)
    *               shift and go to state 83
    /               shift and go to state 84


state 90

    (41) factor -> factor * termino .

    *               reduce using rule 41 (factor -> factor * termino .)
    /               reduce using rule 41 (factor -> factor * termino .)
    +               reduce using rule 41 (factor -> factor * termino .)
    -               reduce using rule 41 (factor -> factor * termino .)
    :               reduce using rule 41 (factor -> factor * termino .)
    ^               reduce using rule 41 (factor -> factor * termino .)
    &               reduce using rule 41 (factor -> factor * termino .)
    |               reduce using rule 41 (factor -> factor * termino .)
    REGLA           reduce using rule 41 (factor -> factor * termino .)
    $               reduce using rule 41 (factor -> factor * termino .)
    $end            reduce using rule 41 (factor -> factor * termino .)
    >               reduce using rule 41 (factor -> factor * termino .)
    ]               reduce using rule 41 (factor -> factor * termino .)
    )               reduce using rule 41 (factor -> factor * termino .)


state 91

    (42) factor -> factor / termino .

    *               reduce using rule 42 (factor -> factor / termino .)
    /               reduce using rule 42 (factor -> factor / termino .)
    +               reduce using rule 42 (factor -> factor / termino .)
    -               reduce using rule 42 (factor -> factor / termino .)
    :               reduce using rule 42 (factor -> factor / termino .)
    ^               reduce using rule 42 (factor -> factor / termino .)
    &               reduce using rule 42 (factor -> factor / termino .)
    |               reduce using rule 42 (factor -> factor / termino .)
    REGLA           reduce using rule 42 (factor -> factor / termino .)
    $               reduce using rule 42 (factor -> factor / termino .)
    $end            reduce using rule 42 (factor -> factor / termino .)
    >               reduce using rule 42 (factor -> factor / termino .)
    ]               reduce using rule 42 (factor -> factor / termino .)
    )               reduce using rule 42 (factor -> factor / termino .)


state 92

    (49) termino -> + ( numero ) .

    *               reduce using rule 49 (termino -> + ( numero ) .)
    /               reduce using rule 49 (termino -> + ( numero ) .)
    +               reduce using rule 49 (termino -> + ( numero ) .)
    -               reduce using rule 49 (termino -> + ( numero ) .)
    :               reduce using rule 49 (termino -> + ( numero ) .)
    ^               reduce using rule 49 (termino -> + ( numero ) .)
    &               reduce using rule 49 (termino -> + ( numero ) .)
    |               reduce using rule 49 (termino -> + ( numero ) .)
    REGLA           reduce using rule 49 (termino -> + ( numero ) .)
    $               reduce using rule 49 (termino -> + ( numero ) .)
    $end            reduce using rule 49 (termino -> + ( numero ) .)
    >               reduce using rule 49 (termino -> + ( numero ) .)
    ]               reduce using rule 49 (termino -> + ( numero ) .)
    )               reduce using rule 49 (termino -> + ( numero ) .)


state 93

    (50) termino -> - ( numero ) .

    *               reduce using rule 50 (termino -> - ( numero ) .)
    /               reduce using rule 50 (termino -> - ( numero ) .)
    +               reduce using rule 50 (termino -> - ( numero ) .)
    -               reduce using rule 50 (termino -> - ( numero ) .)
    :               reduce using rule 50 (termino -> - ( numero ) .)
    ^               reduce using rule 50 (termino -> - ( numero ) .)
    &               reduce using rule 50 (termino -> - ( numero ) .)
    |               reduce using rule 50 (termino -> - ( numero ) .)
    REGLA           reduce using rule 50 (termino -> - ( numero ) .)
    $               reduce using rule 50 (termino -> - ( numero ) .)
    $end            reduce using rule 50 (termino -> - ( numero ) .)
    >               reduce using rule 50 (termino -> - ( numero ) .)
    ]               reduce using rule 50 (termino -> - ( numero ) .)
    )               reduce using rule 50 (termino -> - ( numero ) .)

